//
//  EmailLandingViewController.swift
//  Basis-Auth-Demo
//
//  Created by rishabh on 04/05/22.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import MaterialComponents.MaterialTextControls_OutlinedTextFields
import MaterialComponents.MaterialButtons

protocol EmailLandingDisplayLogic: AnyObject
{
    func loginActionComplete(viewModel: EmailLanding.LoginAction.LoginViewModel)
    func callRouterForVerifyTransition(viewModel: EmailLanding.PostLoginAction.ViewModel)
}

class EmailLandingViewController: UIViewController, EmailLandingDisplayLogic
{
    var interactor: EmailLandingBusinessLogic?
    var router: (NSObjectProtocol & EmailLandingRoutingLogic & EmailLandingDataPassing)?
    
    // MARK: Object lifecycle
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?)
    {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
    required init?(coder aDecoder: NSCoder)
    {
        super.init(coder: aDecoder)
        setup()
    }
    
    // MARK: Setup
    private func setup()
    {
        let viewController = self
        let interactor = EmailLandingInteractor()
        let presenter = EmailLandingPresenter()
        let router = EmailLandingRouter()
        
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    // MARK: Routing
    func prepareForVerifyTransition() {
        if let router = router {
            router.routeToVerifyScene()
        }
    }
    
    // MARK: View lifecycle
    
    override func viewDidLoad()
    {
        super.viewDidLoad()
        emailTextField.delegate = self
        setTextFieldUI()
    }
    
    override func viewDidAppear(_ animated: Bool) {
        super.viewDidAppear(animated)
        emailTextField.sizeToFit()
    }
    
    func setTextFieldUI() {
        emailTextField.labelBehavior = .floats
        emailTextField.label.text = "Email Address"
        emailTextField.setFloatingLabelColor(Globals.ColorFactory.indigo, for: MDCTextControlState.editing)
        emailTextField.setFloatingLabelColor(Globals.ColorFactory.indigo, for: MDCTextControlState.normal)
        emailTextField.setOutlineColor(Globals.ColorFactory.indigo, for: MDCTextControlState.normal)
        emailTextField.setOutlineColor(Globals.ColorFactory.indigo, for: MDCTextControlState.editing)
    }
    
    // MARK: Implementations
    @IBOutlet weak var emailTextField: MDCOutlinedTextField!
    @IBOutlet weak var buttonGetOTP: UIButton!
    @IBOutlet weak var containerStackViewBottomConstraint: NSLayoutConstraint!
    
    @IBAction func buttonGetOTPPressed(_ sender: Any) {
        if validateEmailAgainstRegex() {
            ActivityIndicator.start(controller: self)
            let email = emailTextField.text ?? ""
            let request = EmailLanding.LoginAction.LoginRequest(email: email)
            interactor?.loginUsing(request: request)
        }
        else {
            emailTextField.setOutlineColor(.red, for: .normal)
            emailTextField.label.text = "Invalid Email!"
            emailTextField.setFloatingLabelColor(.red, for: MDCTextControlState.editing)
        }
    }
    
    @IBAction func emailTextFieldDidBeginEditing(_ sender: UITextField) {
        setTextFieldUI()
    }
    
    func validateEmailAgainstRegex() -> Bool {
        guard let email = emailTextField.text else { return false }
        let emailRegEx = "[A-Z0-9a-z._%+-]+@[A-Za-z0-9.-]+\\.[A-Za-z]{2,64}"
        let emailPred = NSPredicate(format:"SELF MATCHES %@", emailRegEx)
        return emailPred.evaluate(with: email)
    }
    
    func loginActionComplete(viewModel: EmailLanding.LoginAction.LoginViewModel) {
        DispatchQueue.main.async {
            ActivityIndicator.stop(controller: self)
            if (viewModel.apiSuccess) {
                self.interactor?.routeToVerifyScene()
            }
            else {
                self.emailTextField.setOutlineColor(.red, for: .normal)
                self.emailTextField.leadingAssistiveLabel.text = "Server Error! Try again."
                self.emailTextField.setFloatingLabelColor(.red, for: MDCTextControlState.editing)
            }
        }
    }
    
    func callRouterForVerifyTransition(viewModel: EmailLanding.PostLoginAction.ViewModel) {
        prepareForVerifyTransition()
    }
}

extension EmailLandingViewController: UITextFieldDelegate {
    func textField(_ textField: UITextField, shouldChangeCharactersIn range: NSRange, replacementString string: String) -> Bool {
        emailTextField.label.text = "Email Address"
        emailTextField.setFloatingLabelColor(Globals.ColorFactory.indigo, for: MDCTextControlState.editing)
        return true
    }
}
