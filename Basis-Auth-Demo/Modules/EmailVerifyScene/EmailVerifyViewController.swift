//
//  EmailVerifyViewController.swift
//  Basis-Auth-Demo
//
//  Created by rishabh on 05/05/22.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit
import MaterialComponents.MaterialTextControls_OutlinedTextFields
import MaterialComponents

protocol EmailVerifyDisplayLogic: AnyObject
{
    func displayInputEmail(viewModel: EmailVerify.GetEmail.ViewModel)
    func prepareRouterForDashboardTransition(viewModel: EmailVerify.VerifyAction.ViewModel)
    func displayVerifyActionFailed()
}

class EmailVerifyViewController: UIViewController, UITextFieldDelegate, EmailVerifyDisplayLogic
{
    var interactor: EmailVerifyBusinessLogic?
    var router: (NSObjectProtocol & EmailVerifyRoutingLogic & EmailVerifyDataPassing)?
    
    // MARK: Object lifecycle
    
    override init(nibName nibNameOrNil: String?, bundle nibBundleOrNil: Bundle?)
    {
        super.init(nibName: nibNameOrNil, bundle: nibBundleOrNil)
        setup()
    }
    
    required init?(coder aDecoder: NSCoder)
    {
        super.init(coder: aDecoder)
        setup()
    }
    
    // MARK: Setup
    
    private func setup()
    {
        let viewController = self
        let interactor = EmailVerifyInteractor()
        let presenter = EmailVerifyPresenter()
        let router = EmailVerifyRouter()
        viewController.interactor = interactor
        viewController.router = router
        interactor.presenter = presenter
        presenter.viewController = viewController
        router.viewController = viewController
        router.dataStore = interactor
    }
    
    // MARK: Routing
    func prepareForDashboardTransition() {
        if let router = router {
            router.routeToDashboardScene()
        }
    }
    
    // MARK: View lifecycle
    override func viewDidLoad()
    {
        super.viewDidLoad()
        setTextFieldUI()
        getUserInputEmail()
        interactor?.printValues()
    }
    
    func setTextFieldUI() {
        codeTextField.delegate = self
        codeTextField.labelBehavior = .floats
        codeTextField.label.text = "Verification Code"
        codeTextField.setFloatingLabelColor(Globals.ColorFactory.indigo, for: MDCTextControlState.editing)
        codeTextField.setFloatingLabelColor(Globals.ColorFactory.indigo, for: MDCTextControlState.normal)
        codeTextField.setOutlineColor(Globals.ColorFactory.indigo, for: MDCTextControlState.normal)
        codeTextField.setOutlineColor(Globals.ColorFactory.indigo, for: MDCTextControlState.editing)
    }
    
    func displayInputEmail(viewModel: EmailVerify.GetEmail.ViewModel)
    {
        labelEmailInfo.text = viewModel.strEmail
    }
    
    func prepareRouterForDashboardTransition(viewModel: EmailVerify.VerifyAction.ViewModel) {
        DispatchQueue.main.async {
            ActivityIndicator.stop(controller: self)
            self.prepareForDashboardTransition()
        }
    }
    
    func displayVerifyActionFailed() {
        DispatchQueue.main.async {
            ActivityIndicator.stop(controller: self)
            self.codeTextField.leadingAssistiveLabel.text = "Server Error! Try again."
            self.codeTextField.setFloatingLabelColor(.red, for: MDCTextControlState.editing)
        }
    }
    
    // MARK: Implementations
    @IBOutlet weak var codeTextField: MDCOutlinedTextField!
    @IBOutlet weak var buttonVerifyEmail: UIButton!
    @IBOutlet weak var labelEmailInfo: UILabel!
    @IBOutlet weak var containerStackViewBottomConstraint: NSLayoutConstraint!
    
    @IBAction func buttonVerifyPressed(_ sender: Any) {
        ActivityIndicator.start(controller: self)
        let verificationCode = codeTextField.text ?? ""
        interactor?.verifyUsing(request: EmailVerify.VerifyAction.Request(code: Int(verificationCode)!))
    }
    
    func getUserInputEmail()
    {
        let request = EmailVerify.GetEmail.Request()
        interactor?.getInputEmail(request: request)
    }
    
    func textField(_ textField: UITextField, shouldChangeCharactersIn range: NSRange, replacementString string: String) -> Bool {
        codeTextField.label.text = "Verification Code"
        codeTextField.setFloatingLabelColor(Globals.ColorFactory.indigo, for: MDCTextControlState.editing)
        return true
    }
}
