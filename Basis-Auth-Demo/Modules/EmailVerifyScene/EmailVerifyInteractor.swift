//
//  EmailVerifyInteractor.swift
//  Basis-Auth-Demo
//
//  Created by rishabh on 05/05/22.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol EmailVerifyBusinessLogic
{
    func getInputEmail(request: EmailVerify.GetEmail.Request)
    func verifyUsing(request: EmailVerify.VerifyAction.Request)
    func printValues()
}

protocol EmailVerifyDataStore
{
    var isLogin: Bool? { get set }
    var token: Int? { get set }
    var email: String? { get set }
    var verificationCode: Int? { get set }
    var verificationIsLogin: Bool? { get set }
    var userName: String? { get set }
    var responseMessage: String { get set }
    var isApiSuccess: Bool { get set }
}

class EmailVerifyInteractor: EmailVerifyBusinessLogic, EmailVerifyDataStore
{
    var userName: String?
    var isApiSuccess: Bool = false
    var responseMessage: String = ""
    
    var isLogin: Bool?
    var token: Int?
    var email: String?
    
    var verificationCode: Int?
    var verificationIsLogin: Bool?
    
    var presenter: EmailVerifyPresentationLogic?
    var worker: EmailVerifyWorker?
    
    func printValues() {
        print("\nRecevied Data:", isLogin as Any, token as Any, email as Any)
    }
    
    // MARK: Implementations
    func getInputEmail(request: EmailVerify.GetEmail.Request)
    {
        let response = EmailVerify.GetEmail.Response(email: email ?? "")
        presenter?.presentInputEmail(response: response)
    }
    
    func verifyUsing(request: EmailVerify.VerifyAction.Request) {
        verificationCode = request.code
        let verificationEmail = email ?? ""
        let verificationToken = token ?? 0
        
        let jsonData = "{ \"email\" : \"\(verificationEmail)\", \"token\" : \"\(verificationToken)\", \"verificationCode\" : \"\(verificationCode ?? 0)\" }"
        
        callApi(jsonData: jsonData)
    }
    
    func callApi(jsonData: String)
    {
        worker = EmailVerifyWorker()
        worker?.sendVerifyRequestToServer(jsonData: jsonData, onCompletion: { [unowned self] apiResponse, success in
            let response = EmailVerify.VerifyAction.Response.init(success: success,
                                                                  email: email ?? "",
                                                                  code: verificationCode ?? 0,
                                                                  isLogin: apiResponse?.results?.isLogin)
            self.verificationIsLogin = apiResponse?.results?.isLogin
            
            let userObject = apiResponse?.results?.user
            let userFullName = (userObject?.firstName ?? "") + " " + (userObject?.lastName ?? "")
            self.userName = userFullName.trimmingCharacters(in: .whitespaces)
            self.responseMessage = apiResponse?.message ?? ""
            self.isApiSuccess = apiResponse?.success ?? false
            self.presenter?.presentVerifyActionResponse(response: response)
        })
    }
}
